{"version":3,"sources":["Note.js","Board.js","serviceWorker.js","index.js"],"names":["Note","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","editing","edit","bind","assertThisInitialized","remove","renderForm","renderDisplay","save","randomBetween","style","right","window","innerWidth","top","innerHeight","transform","concat","x","y","s","Math","ceil","random","textArea","_newText","focus","select","nextProps","nextState","children","setState","e","preventDefault","onChange","value","index","onRemove","_this2","react_default","a","createElement","className","onSubmit","ref","input","defaultValue","id","fa","onClick","Component","Board","notes","eachNote","update","add","nextId","self","count","fetch","then","response","json","split","forEach","sentence","substring","text","prevState","toConsumableArray","note","uniqueId","newText","i","console","log","map","objectSpread","filter","src_Note","key","Boolean","location","hostname","match","ReactDOM","render","src_Board","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b64ecbfa.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { FaPencilAlt }  from 'react-icons/fa'\r\nimport { FaTrash } from 'react-icons/fa'\r\nimport {FaSave} from 'react-icons/fa'\r\n\r\nclass Note extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            editing: false\r\n        }\r\n        this.edit = this.edit.bind(this)\r\n        this.remove = this.remove.bind(this)\r\n        this.renderForm = this.renderForm.bind(this)\r\n        this.renderDisplay = this.renderDisplay.bind(this)\r\n        this.save = this.save.bind(this)\r\n        this.randomBetween = this.randomBetween.bind(this)\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.style = {\r\n            right: this.randomBetween(0, window.innerWidth - 150, 'px'),\r\n            top: this.randomBetween(0, window.innerHeight - 150, 'px'),\r\n            transform: `rotate(${this.randomBetween(-25, 25, 'deg')})`\r\n        }\r\n    }\r\n\r\n    randomBetween(x, y, s) {\r\n        return x + Math.ceil(Math.random() * (y-x)) + s\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        var textArea \r\n        if(this.state.editing){\r\n            textArea = this._newText\r\n            textArea.focus()\r\n            textArea.select()\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return(\r\n            this.props.children !== nextProps.children || this.state !== nextState\r\n        )\r\n    }\r\n\r\n    edit(){\r\n        this.setState({\r\n            editing: true\r\n        })\r\n    }\r\n    save(e){\r\n        e.preventDefault()\r\n        this.props.onChange(this._newText.value, this.props.index)\r\n        this.setState({\r\n            editing: false\r\n        })\r\n    }\r\n    remove(){\r\n        this.props.onRemove(this.props.index)\r\n    }\r\n\r\n    renderForm() {\r\n        return (\r\n            <div className=\"note\" style={this.style}>\r\n                <form onSubmit={this.save}>\r\n                    <textarea ref={input => this._newText = input}\r\n                    defaultValue={this.props.children}/>\r\n                    <button id='save'><FaSave /></button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n    renderDisplay(){\r\n        return(\r\n            <div className='note' style={this.style}>\r\n                <p>{this.props.children}</p>\r\n                <span>\r\n                    <button onClick={this.edit} id=\"edit\"><FaPencilAlt /></button>\r\n                    <button onClick={this.remove} id=\"remove\"><FaTrash/></button>\r\n                </span>\r\n            </div>\r\n        )\r\n    }\r\n    render(){\r\n        return this.state.editing ? this.renderForm() : this.renderDisplay();\r\n    }\r\n}\r\n\r\nexport default Note","import React, {Component} from 'react'\r\nimport Note from './Note'\r\nimport { FaPlus } from 'react-icons/fa'\r\n\r\nclass Board extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            notes: []\r\n        }\r\n        this.eachNote = this.eachNote.bind(this)\r\n        this.update = this.update.bind(this)\r\n        this.remove = this.remove.bind(this)\r\n        this.add = this.add.bind(this)\r\n        this.nextId = this.nextId.bind(this)\r\n    }\r\n\r\n\r\n    componentWillMount(){\r\n        var self = this\r\n        if(this.props.count){\r\n            fetch(`https://baconipsum.com/api/?type=all-meat&sentences=${this.props.count}`)\r\n            .then(response => response.json())\r\n            .then(json => json[0]\r\n                .split('. ')\r\n                .forEach(sentence => self.add(sentence.substring(0, 25))))\r\n        }\r\n    }\r\n\r\n    add(text){\r\n        this.setState(prevState => ({\r\n            notes: [\r\n                ...prevState.notes,\r\n                {\r\n                    id: this.nextId(),\r\n                    note: text\r\n                }\r\n            ]\r\n        }))\r\n    }\r\n\r\n    nextId(){\r\n        this.uniqueId = this.uniqueId || 0\r\n        return this.uniqueId++\r\n    }\r\n\r\n    update(newText, i){\r\n        console.log('updating item at index', i, newText)\r\n        this.setState(prevState => ({\r\n            notes: prevState.notes.map(\r\n                note => (note.id !== i) ? note : {...note, note: newText}\r\n            )\r\n        }))\r\n    }\r\n\r\n    remove(id){\r\n        console.log('removing item at', id)\r\n        this.setState(prevState => ({\r\n            notes: prevState.notes.filter(note => note.id !== id)\r\n        }))\r\n    }\r\n\r\n    eachNote(note, i){\r\n        return (\r\n            <Note key={note.id}\r\n                    index={note.id}\r\n                    onChange={this.update}\r\n                    onRemove={this.remove}>\r\n                    {note.note}\r\n                    </Note>\r\n        )\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className ='board'>\r\n                {this.state.notes.map(this.eachNote)}\r\n                <button onClick={this.add.bind(null, \"New Note\")} id=\"add\">\r\n                    <FaPlus />\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Board","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Board from './Board';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<Board count={50} />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}